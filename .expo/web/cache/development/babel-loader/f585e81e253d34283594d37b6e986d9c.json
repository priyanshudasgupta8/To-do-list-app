{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"F:\\\\Projects\\\\To-Do List App\\\\to-do-list\\\\screens\\\\MyReceivedBooksScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { ListItem } from 'react-native-elements';\nimport firebase from 'firebase';\nimport db from \"../config\";\nimport MyHeader from \"../components/MyHeader\";\nimport { RFValue } from \"react-native-responsive-fontsize\";\n\nvar MyReceivedBooksScreen = function (_Component) {\n  _inherits(MyReceivedBooksScreen, _Component);\n\n  var _super = _createSuper(MyReceivedBooksScreen);\n\n  function MyReceivedBooksScreen() {\n    var _this;\n\n    _classCallCheck(this, MyReceivedBooksScreen);\n\n    _this = _super.call(this);\n\n    _this.getReceivedBooksList = function () {\n      _this.requestRef = db.collection(\"requested_books\").where('user_id', '==', _this.state.userId).where(\"book_status\", '==', 'received').onSnapshot(function (snapshot) {\n        var receivedBooksList = snapshot.docs.map(function (doc) {\n          return doc.data();\n        });\n\n        _this.setState({\n          receivedBooksList: receivedBooksList\n        });\n      });\n    };\n\n    _this.keyExtractor = function (item, index) {\n      return index.toString();\n    };\n\n    _this.renderItem = function (_ref) {\n      var item = _ref.item,\n          i = _ref.i;\n      return React.createElement(ListItem, {\n        key: i,\n        title: item.book_name,\n        subtitle: item.bookStatus,\n        leftElement: React.createElement(Image, {\n          style: styles.LiImage,\n          source: {\n            uri: item.image_link\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 11\n          }\n        }),\n        titleStyle: styles.titlestyle,\n        bottomDivider: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 7\n        }\n      });\n    };\n\n    _this.state = {\n      userId: firebase.auth().currentUser.email,\n      receivedBooksList: []\n    };\n    _this.requestRef = null;\n    return _this;\n  }\n\n  _createClass(MyReceivedBooksScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getReceivedBooksList();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.requestRef();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 7\n        }\n      }, React.createElement(MyHeader, {\n        title: \"Received Books\",\n        navigation: this.props.navigation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }\n      }, this.state.receivedBooksList.length === 0 ? React.createElement(View, {\n        style: styles.subContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }\n      }, \"List Of All Received Books\")) : React.createElement(FlatList, {\n        keyExtractor: this.keyExtractor,\n        data: this.state.receivedBooksList,\n        renderItem: this.renderItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }\n      })));\n    }\n  }]);\n\n  return MyReceivedBooksScreen;\n}(Component);\n\nexport { MyReceivedBooksScreen as default };\nvar styles = StyleSheet.create({\n  subContainer: {\n    flex: 1,\n    fontSize: 20,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  button: {\n    width: 100,\n    height: 30,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: \"#ff5722\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 8\n    }\n  },\n  LiImage: {\n    height: RFValue(50),\n    width: RFValue(50)\n  },\n  titlestyle: {\n    color: 'black',\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"sources":["F:/Projects/To-Do List App/to-do-list/screens/MyReceivedBooksScreen.js"],"names":["React","Component","ListItem","firebase","db","MyHeader","RFValue","MyReceivedBooksScreen","getReceivedBooksList","requestRef","collection","where","state","userId","onSnapshot","snapshot","receivedBooksList","docs","map","doc","data","setState","keyExtractor","item","index","toString","renderItem","i","book_name","bookStatus","styles","LiImage","uri","image_link","titlestyle","auth","currentUser","email","flex","props","navigation","length","subContainer","fontSize","StyleSheet","create","justifyContent","alignItems","button","width","height","backgroundColor","shadowColor","shadowOffset","color","fontWeight"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { View, StyleSheet, Text,Image, FlatList,TouchableOpacity } from 'react-native';\r\nimport { ListItem } from 'react-native-elements'\r\nimport firebase from 'firebase';\r\nimport db from '../config'\r\nimport MyHeader from '../components/MyHeader';\r\nimport { RFValue } from \"react-native-responsive-fontsize\";\r\n\r\nexport default class MyReceivedBooksScreen extends Component{\r\n  constructor(){\r\n    super()\r\n    this.state = {\r\n      userId  : firebase.auth().currentUser.email,\r\n      receivedBooksList : []\r\n    }\r\n  this.requestRef= null\r\n  }\r\n\r\n  getReceivedBooksList =()=>{\r\n    this.requestRef = db.collection(\"requested_books\")\r\n    .where('user_id','==',this.state.userId)\r\n    .where(\"book_status\", '==','received')\r\n    .onSnapshot((snapshot)=>{\r\n      var receivedBooksList = snapshot.docs.map((doc) => doc.data())\r\n      this.setState({\r\n        receivedBooksList : receivedBooksList\r\n      });\r\n    })\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.getReceivedBooksList()\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    this.requestRef();\r\n  }\r\n\r\n  keyExtractor = (item, index) => index.toString()\r\n\r\n  renderItem = ( {item, i} ) =>{\r\n    return (\r\n      <ListItem\r\n        key={i}\r\n        title={item.book_name}\r\n        subtitle={item.bookStatus}\r\n        leftElement={\r\n          <Image\r\n            style={styles.LiImage}\r\n            source={{\r\n              uri: item.image_link,\r\n            }}\r\n            />\r\n          }\r\n        titleStyle={styles.titlestyle}\r\n        bottomDivider\r\n      />\r\n    )\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <View style={{flex:1}}>\r\n        <MyHeader title=\"Received Books\" navigation ={this.props.navigation}/>\r\n        <View style={{flex:1}}>\r\n          {\r\n            this.state.receivedBooksList.length === 0\r\n            ?(\r\n              <View style={styles.subContainer}>\r\n                <Text style={{ fontSize: 20}}>List Of All Received Books</Text>\r\n              </View>\r\n            )\r\n            :(\r\n              <FlatList\r\n                keyExtractor={this.keyExtractor}\r\n                data={this.state.receivedBooksList}\r\n                renderItem={this.renderItem}\r\n              />\r\n            )\r\n          }\r\n        </View>\r\n      </View>\r\n    )\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  subContainer:{\r\n    flex:1,\r\n    fontSize: 20,\r\n    justifyContent:'center',\r\n    alignItems:'center'\r\n  },\r\n  button:{\r\n    width:100,\r\n    height:30,\r\n    justifyContent:'center',\r\n    alignItems:'center',\r\n    backgroundColor:\"#ff5722\",\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n       width: 0,\r\n       height: 8\r\n     }\r\n  },\r\n  LiImage:{\r\n    height:RFValue(50),\r\n    width:RFValue(50)\r\n  },\r\n  titlestyle:\r\n  {\r\n  color: 'black',\r\n  fontWeight: 'bold'\r\n},\r\n\r\n})\r\n"]},"metadata":{},"sourceType":"module"}