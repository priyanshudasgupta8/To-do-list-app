{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"F:\\\\Projects\\\\Book Donation App\\\\book-santa-stage-13\\\\screens\\\\NotificationScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { ListItem, Icon } from 'react-native-elements';\nimport firebase from 'firebase';\nimport MyHeader from \"../components/MyHeader\";\nimport SwipeableFlatlist from \"../components/SwipeableFlatlist\";\nimport db from \"../config\";\n\nvar NotificationScreen = function (_Component) {\n  _inherits(NotificationScreen, _Component);\n\n  var _super = _createSuper(NotificationScreen);\n\n  function NotificationScreen(props) {\n    var _this;\n\n    _classCallCheck(this, NotificationScreen);\n\n    _this = _super.call(this, props);\n\n    _this.getNotifications = function () {\n      _this.notificationRef = db.collection(\"all_notifications\").where(\"notification_status\", \"==\", \"unread\").where(\"targeted_user_id\", '==', _this.state.userId).onSnapshot(function (snapshot) {\n        var allNotifications = [];\n        snapshot.docs.map(function (doc) {\n          var notification = doc.data();\n          notification[\"doc_id\"] = doc.id;\n          allNotifications.push(notification);\n        });\n\n        _this.setState({\n          allNotifications: allNotifications\n        });\n      });\n    };\n\n    _this.keyExtractor = function (item, index) {\n      return index.toString();\n    };\n\n    _this.renderItem = function (_ref) {\n      var item = _ref.item,\n          index = _ref.index;\n      return React.createElement(ListItem, {\n        key: index,\n        leftElement: React.createElement(Icon, {\n          name: \"book\",\n          type: \"font-awesome\",\n          color: \"#696969\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 24\n          }\n        }),\n        title: item.book_name,\n        titleStyle: styles.LiTitle,\n        subtitle: item.message,\n        bottomDivider: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }\n      });\n    };\n\n    _this.state = {\n      userId: firebase.auth().currentUser.email,\n      allNotifications: []\n    };\n    _this.notificationRef = null;\n    return _this;\n  }\n\n  _createClass(NotificationScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getNotifications();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.notificationRef();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 0.13\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }\n      }, React.createElement(MyHeader, {\n        title: \"Notifications\",\n        navigation: this.props.navigation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }\n      })), React.createElement(View, {\n        style: {\n          flex: 0.8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }\n      }, this.state.allNotifications.length === 0 ? React.createElement(View, {\n        style: styles.imageView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }\n      }, React.createElement(Image, {\n        source: require(\"../assets/Notification.png\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }\n      }), React.createElement(Text, {\n        style: {\n          fontSize: 25\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }\n      }, \"You have no notifications\")) : React.createElement(SwipeableFlatlist, {\n        allNotifications: this.state.allNotifications,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }\n      })));\n    }\n  }]);\n\n  return NotificationScreen;\n}(Component);\n\nexport { NotificationScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#deeeed'\n  },\n  imageView: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  LiTitle: {\n    color: 'black',\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"sources":["F:/Projects/Book Donation App/book-santa-stage-13/screens/NotificationScreen.js"],"names":["React","Component","ListItem","Icon","firebase","MyHeader","SwipeableFlatlist","db","NotificationScreen","props","getNotifications","notificationRef","collection","where","state","userId","onSnapshot","snapshot","allNotifications","docs","map","doc","notification","data","id","push","setState","keyExtractor","item","index","toString","renderItem","book_name","styles","LiTitle","message","auth","currentUser","email","container","flex","navigation","length","imageView","require","fontSize","StyleSheet","create","backgroundColor","justifyContent","alignItems","color","fontWeight"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { StyleSheet, View, FlatList,Text,Image } from 'react-native';\r\nimport { ListItem, Icon } from 'react-native-elements';\r\nimport firebase from 'firebase';\r\nimport MyHeader from '../components/MyHeader';\r\nimport SwipeableFlatlist from '../components/SwipeableFlatlist';\r\nimport db from '../config';\r\n\r\nexport default class NotificationScreen extends Component{\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      userId :  firebase.auth().currentUser.email,\r\n      allNotifications : []\r\n    };\r\n\r\n    this.notificationRef = null\r\n  }\r\n\r\n  getNotifications=()=>{\r\n    this.notificationRef = db.collection(\"all_notifications\")\r\n    .where(\"notification_status\", \"==\", \"unread\")\r\n    .where(\"targeted_user_id\",'==',this.state.userId)\r\n    .onSnapshot((snapshot)=>{\r\n      var allNotifications =  []\r\n      snapshot.docs.map((doc) =>{\r\n        var notification = doc.data()\r\n        notification[\"doc_id\"] = doc.id\r\n        allNotifications.push(notification)\r\n      });\r\n      this.setState({\r\n          allNotifications : allNotifications\r\n      });\r\n    })\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.getNotifications()\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    this.notificationRef()\r\n  }\r\n\r\n  keyExtractor = (item, index) => index.toString()\r\n\r\n  renderItem = ({item,index}) =>{\r\n      return (\r\n        <ListItem\r\n          key={index}\r\n          leftElement={<Icon name=\"book\" type=\"font-awesome\" color ='#696969'/>}\r\n          title={item.book_name}\r\n          titleStyle={styles.LiTitle}\r\n          subtitle={item.message}\r\n          bottomDivider\r\n        />\r\n      )\r\n }\r\n\r\n\r\n  render(){\r\n    return(\r\n      <View style={styles.container}>\r\n        <View style={{flex:0.13}}>\r\n          <MyHeader title={\"Notifications\"} navigation={this.props.navigation}/>\r\n        </View>\r\n        <View style={{flex:0.8}}>\r\n          {\r\n            this.state.allNotifications.length === 0\r\n            ?(\r\n              <View style={styles.imageView}>\r\n                <Image\r\n                source={require('../assets/Notification.png')}/>\r\n                <Text style={{fontSize:25}}>You have no notifications</Text>\r\n              </View>\r\n            )\r\n            :(\r\n              <SwipeableFlatlist allNotifications={this.state.allNotifications}/>\r\n            )\r\n          }\r\n        </View>\r\n      </View>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container : {\r\n    flex : 1,\r\n    backgroundColor:'#deeeed'\r\n  },\r\n  imageView:{\r\n    flex:1,\r\n    justifyContent:'center',\r\n    alignItems:'center'\r\n  },\r\n  LiTitle:{\r\n    color: 'black',\r\n    fontWeight: 'bold'\r\n  }\r\n})\r\n"]},"metadata":{},"sourceType":"module"}