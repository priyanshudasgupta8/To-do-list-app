{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"F:\\\\Projects\\\\To-Do List App\\\\to-do-list\\\\screens\\\\PendingTaskScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { ListItem } from \"react-native-elements\";\nimport firebase from \"firebase\";\nimport db from \"../config\";\nimport MyHeader from \"../components/MyHeader\";\n\nvar PendingTaskScreen = function (_Component) {\n  _inherits(PendingTaskScreen, _Component);\n\n  var _super = _createSuper(PendingTaskScreen);\n\n  function PendingTaskScreen() {\n    var _this;\n\n    _classCallCheck(this, PendingTaskScreen);\n\n    _this = _super.call(this);\n\n    _this.getRequestedBooksList = function () {\n      _this.requestRef = db.collection(\"requested_books\").onSnapshot(function (snapshot) {\n        var requestedBooksList = snapshot.docs.map(function (doc) {\n          return doc.data();\n        });\n\n        _this.setState({\n          requestedBooksList: requestedBooksList\n        });\n      });\n    };\n\n    _this.keyExtractor = function (item, index) {\n      return index.toString();\n    };\n\n    _this.renderItem = function (_ref) {\n      var item = _ref.item,\n          i = _ref.i;\n      return React.createElement(ListItem, {\n        key: i,\n        title: item.book_name + \" --> \" + item.book_priority + \" Priority\",\n        subtitle: item.reason_to_request,\n        titleStyle: {\n          color: \"black\",\n          fontWeight: \"bold\"\n        },\n        rightElement: React.createElement(TouchableOpacity, {\n          style: styles.button,\n          onPress: function onPress() {\n            db.collection('requested_books').onSnapshot(function (snapshot) {\n              snapshot.forEach(function (doc) {\n                console.log(doc.data().request_id);\n                db.collection('requested_books').doc(doc.id).delete();\n              });\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 11\n          }\n        }, React.createElement(Text, {\n          style: {\n            color: \"#ffff\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }\n        }, \"Done\")),\n        bottomDivider: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 7\n        }\n      });\n    };\n\n    _this.state = {\n      userId: firebase.auth().currentUser.email,\n      requestedBooksList: []\n    };\n    _this.requestRef = null;\n    return _this;\n  }\n\n  _createClass(PendingTaskScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getRequestedBooksList();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.requestRef();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.view,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 7\n        }\n      }, React.createElement(MyHeader, {\n        title: \"Pending Tasks\",\n        navigation: this.props.navigation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }\n      }, this.state.requestedBooksList.length === 0 ? React.createElement(View, {\n        style: styles.subContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }\n      }, \"List Of All Requested Books\")) : React.createElement(FlatList, {\n        keyExtractor: this.keyExtractor,\n        data: this.state.requestedBooksList,\n        renderItem: this.renderItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }\n      })));\n    }\n  }]);\n\n  return PendingTaskScreen;\n}(Component);\n\nexport { PendingTaskScreen as default };\nvar styles = StyleSheet.create({\n  subContainer: {\n    flex: 1,\n    fontSize: 20,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  button: {\n    width: 100,\n    height: 30,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#32867d\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 8\n    }\n  },\n  view: {\n    flex: 1,\n    backgroundColor: \"#fff\"\n  }\n});","map":{"version":3,"sources":["F:/Projects/To-Do List App/to-do-list/screens/PendingTaskScreen.js"],"names":["React","Component","ListItem","firebase","db","MyHeader","PendingTaskScreen","getRequestedBooksList","requestRef","collection","onSnapshot","snapshot","requestedBooksList","docs","map","doc","data","setState","keyExtractor","item","index","toString","renderItem","i","book_name","book_priority","reason_to_request","color","fontWeight","styles","button","forEach","console","log","request_id","id","delete","state","userId","auth","currentUser","email","view","props","navigation","flex","length","subContainer","fontSize","StyleSheet","create","justifyContent","alignItems","width","height","backgroundColor","shadowColor","shadowOffset"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Text,\r\n  FlatList,\r\n  TouchableOpacity,\r\n  Image,\r\n} from \"react-native\";\r\nimport { ListItem } from \"react-native-elements\";\r\nimport firebase from \"firebase\";\r\nimport db from \"../config\";\r\nimport MyHeader from \"../components/MyHeader\";\r\n\r\nexport default class PendingTaskScreen extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      userId: firebase.auth().currentUser.email,\r\n      requestedBooksList: [],\r\n    };\r\n    this.requestRef = null;\r\n  }\r\n\r\n  getRequestedBooksList = () => {\r\n    this.requestRef = db\r\n      .collection(\"requested_books\")\r\n      .onSnapshot((snapshot) => {\r\n        var requestedBooksList = snapshot.docs.map((doc) => doc.data());\r\n        this.setState({\r\n          requestedBooksList: requestedBooksList,\r\n        });\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getRequestedBooksList();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n  this.requestRef();\r\n  }\r\n\r\n  keyExtractor = (item, index) => index.toString();\r\n\r\n  renderItem = ({ item, i }) => {\r\n    return (\r\n      <ListItem\r\n        key={i}\r\n        title={`${item.book_name} --> ${item.book_priority} Priority`}\r\n        subtitle={item.reason_to_request}\r\n        titleStyle={{ color: \"black\", fontWeight: \"bold\" }}\r\n        rightElement={\r\n          <TouchableOpacity\r\n            style={styles.button}\r\n            onPress={() => {\r\n              db.collection('requested_books')\r\n              .onSnapshot(snapshot => {\r\n                snapshot.forEach(doc => {\r\n                  console.log(doc.data().request_id);\r\n                  // if (doc)\r\n                  db.collection('requested_books').doc(doc.id).delete();\r\n                });\r\n              })\r\n            }}\r\n          >\r\n            <Text style={{ color: \"#ffff\" }}>Done</Text>\r\n          </TouchableOpacity>\r\n        }\r\n        bottomDivider\r\n      />\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <View style={styles.view}>\r\n        <MyHeader title=\"Pending Tasks\" navigation={this.props.navigation} />\r\n        <View style={{ flex: 1 }}>\r\n          {this.state.requestedBooksList.length === 0 ? (\r\n            <View style={styles.subContainer}>\r\n              <Text style={{ fontSize: 20 }}>List Of All Requested Books</Text>\r\n            </View>\r\n          ) : (\r\n            <FlatList\r\n              keyExtractor={this.keyExtractor}\r\n              data={this.state.requestedBooksList}\r\n              renderItem={this.renderItem}\r\n            />\r\n          )}\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  subContainer: {\r\n    flex: 1,\r\n    fontSize: 20,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  button: {\r\n    width: 100,\r\n    height: 30,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#32867d\",\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 8,\r\n    },\r\n  },\r\n  view:{\r\n    flex: 1,\r\n    backgroundColor: \"#fff\"\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}