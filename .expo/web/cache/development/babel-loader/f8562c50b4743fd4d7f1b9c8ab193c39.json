{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"F:\\\\Projects\\\\To-Do List App\\\\to-do-list\\\\screens\\\\CreateTaskScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport db from \"../config\";\nimport firebase from \"firebase\";\nimport { RFValue } from \"react-native-responsive-fontsize\";\nimport { SearchBar, ListItem, Input } from \"react-native-elements\";\nimport MyHeader from \"../components/MyHeader\";\n\nvar CreateTaskScreen = function (_Component) {\n  _inherits(CreateTaskScreen, _Component);\n\n  var _super = _createSuper(CreateTaskScreen);\n\n  function CreateTaskScreen() {\n    var _this;\n\n    _classCallCheck(this, CreateTaskScreen);\n\n    _this = _super.call(this);\n\n    _this.addRequest = function _callee(bookName, reasonToRequest) {\n      var userId, randomRequestId;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              userId = _this.state.userId;\n              randomRequestId = _this.createUniqueId();\n              db.collection(\"requested_books\").add({\n                user_id: userId,\n                book_name: bookName,\n                reason_to_request: reasonToRequest,\n                request_id: randomRequestId,\n                book_status: \"requested\",\n                date: firebase.firestore.FieldValue.serverTimestamp(),\n                image_link: books.data[0].volumeInfo.imageLinks.thumbnail\n              });\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(_this.getBookRequest());\n\n            case 5:\n              db.collection(\"users\").where(\"email_id\", \"==\", userId).get().then().then(function (snapshot) {\n                snapshot.forEach(function (doc) {\n                  db.collection(\"users\").doc(doc.id).update({\n                    IsBookRequestActive: true\n                  });\n                });\n              });\n\n              _this.setState({\n                bookName: \"\",\n                reasonToRequest: \"\",\n                requestId: randomRequestId\n              });\n\n              return _context.abrupt(\"return\", Alert.alert(\"Book Requested Successfully\"));\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.receivedBooks = function (bookName) {\n      var userId = _this.state.userId;\n      var requestId = _this.state.requestId;\n      db.collection(\"received_books\").add({\n        user_id: userId,\n        book_name: bookName,\n        request_id: requestId,\n        bookStatus: \"received\"\n      });\n    };\n\n    _this.getBookRequest = function () {\n      var bookRequest = db.collection(\"requested_books\").where(\"user_id\", \"==\", _this.state.userId).get().then(function (snapshot) {\n        snapshot.forEach(function (doc) {\n          if (doc.data().book_status !== \"received\") {\n            _this.setState({\n              requestId: doc.data().request_id,\n              requestedBookName: doc.data().book_name,\n              bookStatus: doc.data().book_status,\n              requestedImageLink: doc.data().image_link,\n              docId: doc.id\n            });\n          }\n        });\n      });\n    };\n\n    _this.sendNotification = function () {\n      db.collection(\"users\").where(\"email_id\", \"==\", _this.state.userId).get().then(function (snapshot) {\n        snapshot.forEach(function (doc) {\n          var name = doc.data().first_name;\n          var lastName = doc.data().last_name;\n          db.collection(\"all_notifications\").where(\"request_id\", \"==\", _this.state.requestId).get().then(function (snapshot) {\n            snapshot.forEach(function (doc) {\n              var donorId = doc.data().donor_id;\n              var bookName = doc.data().book_name;\n              db.collection(\"all_notifications\").add({\n                targeted_user_id: donorId,\n                message: name + \" \" + lastName + \" received the book \" + bookName,\n                notification_status: \"unread\",\n                book_name: bookName\n              });\n            });\n          });\n        });\n      });\n    };\n\n    _this.updateBookRequestStatus = function () {\n      db.collection(\"requested_books\").doc(_this.state.docId).update({\n        book_status: \"received\"\n      });\n      db.collection(\"users\").where(\"email_id\", \"==\", _this.state.userId).get().then(function (snapshot) {\n        snapshot.forEach(function (doc) {\n          db.collection(\"users\").doc(doc.id).update({\n            IsBookRequestActive: false\n          });\n        });\n      });\n    };\n\n    _this.renderItem = function (_ref) {\n      var item = _ref.item,\n          i = _ref.i;\n      var obj = {\n        title: item.volumeInfo.title,\n        selfLink: item.selfLink,\n        buyLink: item.saleInfo.buyLink,\n        imageLink: item.volumeInfo.imageLinks\n      };\n      return React.createElement(TouchableHighlight, {\n        style: styles.touchableopacity,\n        activeOpacity: 0.6,\n        underlayColor: \"#DDDDDD\",\n        onPress: function onPress() {\n          _this.setState({\n            showFlatlist: false,\n            bookName: item.volumeInfo.title\n          });\n        },\n        bottomDivider: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 9\n        }\n      }, \" \", item.volumeInfo.title, \" \"));\n    };\n\n    _this.state = {\n      userId: firebase.auth().currentUser.email,\n      bookName: \"\",\n      reasonToRequest: \"\",\n      IsBookRequestActive: \"\",\n      requestedBookName: \"\",\n      bookStatus: \"\",\n      requestId: \"\",\n      userDocId: \"\",\n      docId: \"\",\n      Imagelink: \"#\",\n      dataSource: \"\",\n      requestedImageLink: \"\",\n      showFlatlist: false\n    };\n    return _this;\n  }\n\n  _createClass(CreateTaskScreen, [{\n    key: \"createUniqueId\",\n    value: function createUniqueId() {\n      return Math.random().toString(36).substring(7);\n    }\n  }, {\n    key: \"getIsBookRequestActive\",\n    value: function getIsBookRequestActive() {\n      var _this2 = this;\n\n      db.collection(\"users\").where(\"email_id\", \"==\", this.state.userId).onSnapshot(function (querySnapshot) {\n        querySnapshot.forEach(function (doc) {\n          _this2.setState({\n            IsBookRequestActive: doc.data().IsBookRequestActive,\n            userDocId: doc.id\n          });\n        });\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getBookRequest();\n      this.getIsBookRequestActive();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (this.state.IsBookRequestActive === true) {\n        return React.createElement(View, {\n          style: {\n            flex: 1\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 9\n          }\n        }, React.createElement(View, {\n          style: {\n            flex: 0.1\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 11\n          }\n        }, React.createElement(MyHeader, {\n          title: \"Book Status\",\n          navigation: this.props.navigation,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }\n        })), React.createElement(View, {\n          style: styles.ImageView,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 11\n          }\n        }, React.createElement(Image, {\n          source: {\n            uri: this.state.requestedImageLink\n          },\n          style: styles.imageStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }\n        })), React.createElement(View, {\n          style: styles.bookstatus,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 11\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: RFValue(20)\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }\n        }, \"Name of the book\"), React.createElement(Text, {\n          style: styles.requestedbookName,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }\n        }, this.state.requestedBookName), React.createElement(Text, {\n          style: styles.status,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }\n        }, \"Status\"), React.createElement(Text, {\n          style: styles.bookStatus,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }\n        }, this.state.bookStatus)), React.createElement(View, {\n          style: styles.buttonView,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 11\n          }\n        }, React.createElement(TouchableOpacity, {\n          style: styles.button,\n          onPress: function onPress() {\n            _this3.sendNotification();\n\n            _this3.updateBookRequestStatus();\n\n            _this3.receivedBooks(_this3.state.requestedBookName);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }\n        }, React.createElement(Text, {\n          style: styles.buttontxt,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 15\n          }\n        }, \"Book Recived\"))));\n      }\n\n      return React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 0.1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 9\n        }\n      }, React.createElement(MyHeader, {\n        title: \"Request Book\",\n        navigation: this.props.navigation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }\n      })), React.createElement(View, {\n        style: {\n          flex: 0.9\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 9\n        }\n      }, React.createElement(Input, {\n        style: styles.formTextInput,\n        label: \"Book Name\",\n        placeholder: \"Book name\",\n        containerStyle: {\n          marginTop: RFValue(60)\n        },\n        value: this.state.bookName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }\n      }), this.state.showFlatlist ? React.createElement(FlatList, {\n        data: this.state.dataSource,\n        renderItem: this.renderItem,\n        enableEmptySections: true,\n        style: {\n          marginTop: RFValue(10)\n        },\n        keyExtractor: function keyExtractor(item, index) {\n          return index.toString();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 13\n        }\n      }) : React.createElement(View, {\n        style: {\n          alignItems: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 13\n        }\n      }, React.createElement(Input, {\n        style: styles.formTextInput,\n        containerStyle: {\n          marginTop: RFValue(30)\n        },\n        multiline: true,\n        numberOfLines: 8,\n        label: \"Reason\",\n        placeholder: \"Why do you need the book\",\n        onChangeText: function onChangeText(text) {\n          _this3.setState({\n            reasonToRequest: text\n          });\n        },\n        value: this.state.reasonToRequest,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 15\n        }\n      }), React.createElement(TouchableOpacity, {\n        style: [styles.button, {\n          marginTop: RFValue(30)\n        }],\n        onPress: function onPress() {\n          _this3.addRequest(_this3.state.bookName, _this3.state.reasonToRequest);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: styles.requestbuttontxt,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 17\n        }\n      }, \"Request\")))));\n    }\n  }]);\n\n  return CreateTaskScreen;\n}(Component);\n\nexport { CreateTaskScreen as default };\nvar styles = StyleSheet.create({\n  keyBoardStyle: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  formTextInput: {\n    width: \"75%\",\n    height: RFValue(35),\n    borderWidth: 1,\n    padding: 10\n  },\n  ImageView: {\n    flex: 0.3,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 20\n  },\n  imageStyle: {\n    height: RFValue(150),\n    width: RFValue(150),\n    alignSelf: \"center\",\n    borderWidth: 5,\n    borderRadius: RFValue(10)\n  },\n  bookstatus: {\n    flex: 0.4,\n    alignItems: \"center\"\n  },\n  requestedbookName: {\n    fontSize: RFValue(30),\n    fontWeight: \"500\",\n    padding: RFValue(10),\n    fontWeight: \"bold\",\n    alignItems: 'center',\n    marginLeft: RFValue(60)\n  },\n  status: {\n    fontSize: RFValue(20),\n    marginTop: RFValue(30)\n  },\n  bookStatus: {\n    fontSize: RFValue(30),\n    fontWeight: \"bold\",\n    marginTop: RFValue(10)\n  },\n  buttonView: {\n    flex: 0.2,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  buttontxt: {\n    fontSize: 18,\n    fontWeight: \"bold\",\n    color: \"#fff\"\n  },\n  touchableopacity: {\n    alignItems: \"center\",\n    backgroundColor: \"#DDDDDD\",\n    padding: 10,\n    width: \"90%\"\n  },\n  requestbuttontxt: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    color: \"#fff\"\n  },\n  button: {\n    width: \"25%\",\n    height: 50,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: RFValue(50),\n    backgroundColor: \"#32867d\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 8\n    },\n    shadowOpacity: 0.44,\n    shadowRadius: 10.32,\n    elevation: 16\n  }\n});","map":{"version":3,"sources":["F:/Projects/To-Do List App/to-do-list/screens/CreateTaskScreen.js"],"names":["React","Component","db","firebase","RFValue","SearchBar","ListItem","Input","MyHeader","CreateTaskScreen","addRequest","bookName","reasonToRequest","userId","state","randomRequestId","createUniqueId","collection","add","user_id","book_name","reason_to_request","request_id","book_status","date","firestore","FieldValue","serverTimestamp","image_link","books","data","volumeInfo","imageLinks","thumbnail","getBookRequest","where","get","then","snapshot","forEach","doc","id","update","IsBookRequestActive","setState","requestId","Alert","alert","receivedBooks","bookStatus","bookRequest","requestedBookName","requestedImageLink","docId","sendNotification","name","first_name","lastName","last_name","donorId","donor_id","targeted_user_id","message","notification_status","updateBookRequestStatus","renderItem","item","i","obj","title","selfLink","buyLink","saleInfo","imageLink","styles","touchableopacity","showFlatlist","auth","currentUser","email","userDocId","Imagelink","dataSource","Math","random","toString","substring","onSnapshot","querySnapshot","getIsBookRequestActive","flex","props","navigation","ImageView","uri","imageStyle","bookstatus","fontSize","requestedbookName","status","buttonView","button","buttontxt","formTextInput","marginTop","index","alignItems","text","requestbuttontxt","StyleSheet","create","keyBoardStyle","justifyContent","width","height","borderWidth","padding","alignSelf","borderRadius","fontWeight","marginLeft","color","backgroundColor","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  KeyboardAvoidingView,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n  FlatList,\r\n  TouchableHighlight,\r\n  Alert,\r\n  Image,\r\n} from \"react-native\";\r\nimport db from \"../config\";\r\nimport firebase from \"firebase\";\r\nimport { RFValue } from \"react-native-responsive-fontsize\";\r\nimport { SearchBar, ListItem, Input } from \"react-native-elements\";\r\n\r\nimport MyHeader from \"../components/MyHeader\";\r\n\r\nexport default class CreateTaskScreen extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      userId: firebase.auth().currentUser.email,\r\n      bookName: \"\",\r\n      reasonToRequest: \"\",\r\n      IsBookRequestActive: \"\",\r\n      requestedBookName: \"\",\r\n      bookStatus: \"\",\r\n      requestId: \"\",\r\n      userDocId: \"\",\r\n      docId: \"\",\r\n      Imagelink: \"#\",\r\n      dataSource: \"\",\r\n      requestedImageLink: \"\",\r\n      showFlatlist: false,\r\n    };\r\n  }\r\n\r\n  createUniqueId() {\r\n    return Math.random().toString(36).substring(7);\r\n  }\r\n\r\n  addRequest = async (bookName, reasonToRequest) => {\r\n    var userId = this.state.userId;\r\n    var randomRequestId = this.createUniqueId();\r\n\r\n\r\n    db.collection(\"requested_books\").add({\r\n      user_id: userId,\r\n      book_name: bookName,\r\n      reason_to_request: reasonToRequest,\r\n      request_id: randomRequestId,\r\n      book_status: \"requested\",\r\n      date: firebase.firestore.FieldValue.serverTimestamp(),\r\n      image_link: books.data[0].volumeInfo.imageLinks.thumbnail,\r\n    });\r\n\r\n    await this.getBookRequest();\r\n    db.collection(\"users\")\r\n      .where(\"email_id\", \"==\", userId)\r\n      .get()\r\n      .then()\r\n      .then((snapshot) => {\r\n        snapshot.forEach((doc) => {\r\n          db.collection(\"users\").doc(doc.id).update({\r\n            IsBookRequestActive: true,\r\n          });\r\n        });\r\n      });\r\n\r\n    this.setState({\r\n      bookName: \"\",\r\n      reasonToRequest: \"\",\r\n      requestId: randomRequestId,\r\n    });\r\n\r\n    return Alert.alert(\"Book Requested Successfully\");\r\n  };\r\n\r\n  receivedBooks = (bookName) => {\r\n    var userId = this.state.userId;\r\n    var requestId = this.state.requestId;\r\n    db.collection(\"received_books\").add({\r\n      user_id: userId,\r\n      book_name: bookName,\r\n      request_id: requestId,\r\n      bookStatus: \"received\",\r\n    });\r\n  };\r\n\r\n  getIsBookRequestActive() {\r\n    db.collection(\"users\")\r\n      .where(\"email_id\", \"==\", this.state.userId)\r\n      .onSnapshot((querySnapshot) => {\r\n        querySnapshot.forEach((doc) => {\r\n          this.setState({\r\n            IsBookRequestActive: doc.data().IsBookRequestActive,\r\n            userDocId: doc.id,\r\n          });\r\n        });\r\n      });\r\n  }\r\n\r\n  getBookRequest = () => {\r\n    // getting the requested book\r\n    var bookRequest = db\r\n      .collection(\"requested_books\")\r\n      .where(\"user_id\", \"==\", this.state.userId)\r\n      .get()\r\n      .then((snapshot) => {\r\n        snapshot.forEach((doc) => {\r\n          if (doc.data().book_status !== \"received\") {\r\n            this.setState({\r\n              requestId: doc.data().request_id,\r\n              requestedBookName: doc.data().book_name,\r\n              bookStatus: doc.data().book_status,\r\n              requestedImageLink: doc.data().image_link,\r\n              docId: doc.id,\r\n            });\r\n          }\r\n        });\r\n      });\r\n  };\r\n\r\n  sendNotification = () => {\r\n    //to get the first name and last name\r\n    db.collection(\"users\")\r\n      .where(\"email_id\", \"==\", this.state.userId)\r\n      .get()\r\n      .then((snapshot) => {\r\n        snapshot.forEach((doc) => {\r\n          var name = doc.data().first_name;\r\n          var lastName = doc.data().last_name;\r\n\r\n          // to get the donor id and book nam\r\n          db.collection(\"all_notifications\")\r\n            .where(\"request_id\", \"==\", this.state.requestId)\r\n            .get()\r\n            .then((snapshot) => {\r\n              snapshot.forEach((doc) => {\r\n                var donorId = doc.data().donor_id;\r\n                var bookName = doc.data().book_name;\r\n\r\n                //targert user id is the donor id to send notification to the user\r\n                db.collection(\"all_notifications\").add({\r\n                  targeted_user_id: donorId,\r\n                  message:\r\n                    name + \" \" + lastName + \" received the book \" + bookName,\r\n                  notification_status: \"unread\",\r\n                  book_name: bookName,\r\n                });\r\n              });\r\n            });\r\n        });\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getBookRequest();\r\n    this.getIsBookRequestActive();\r\n  }\r\n\r\n  updateBookRequestStatus = () => {\r\n    //updating the book status after receiving the book\r\n    db.collection(\"requested_books\").doc(this.state.docId).update({\r\n      book_status: \"received\",\r\n    });\r\n\r\n    //getting the  doc id to update the users doc\r\n    db.collection(\"users\")\r\n      .where(\"email_id\", \"==\", this.state.userId)\r\n      .get()\r\n      .then((snapshot) => {\r\n        snapshot.forEach((doc) => {\r\n          //updating the doc\r\n          db.collection(\"users\").doc(doc.id).update({\r\n            IsBookRequestActive: false,\r\n          });\r\n        });\r\n      });\r\n  };\r\n\r\n\r\n  //render Items  functionto render the books from api\r\n  renderItem = ({ item, i }) => {\r\n\r\n\r\n    let obj = {\r\n      title: item.volumeInfo.title,\r\n      selfLink: item.selfLink,\r\n      buyLink: item.saleInfo.buyLink,\r\n      imageLink: item.volumeInfo.imageLinks,\r\n    };\r\n\r\n    return (\r\n      <TouchableHighlight\r\n        style={styles.touchableopacity}\r\n        activeOpacity={0.6}\r\n        underlayColor=\"#DDDDDD\"\r\n        onPress={() => {\r\n          this.setState({\r\n            showFlatlist: false,\r\n            bookName: item.volumeInfo.title,\r\n          });\r\n        }}\r\n        bottomDivider\r\n      >\r\n        <Text> {item.volumeInfo.title} </Text>\r\n      </TouchableHighlight>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    if (this.state.IsBookRequestActive === true) {\r\n      return (\r\n        <View style={{ flex: 1}}>\r\n          <View\r\n            style={{\r\n              flex: 0.1,\r\n            }}\r\n          >\r\n            <MyHeader title=\"Book Status\" navigation={this.props.navigation} />\r\n          </View>\r\n          <View\r\n            style={styles.ImageView}\r\n          >\r\n            <Image\r\n              source={{ uri: this.state.requestedImageLink }}\r\n              style={styles.imageStyle}\r\n            />\r\n          </View>\r\n          <View\r\n            style={styles.bookstatus}\r\n          >\r\n            <Text\r\n              style={{\r\n                fontSize: RFValue(20),\r\n\r\n              }}\r\n            >\r\n              Name of the book\r\n            </Text>\r\n            <Text\r\n              style={styles.requestedbookName}\r\n            >\r\n              {this.state.requestedBookName}\r\n            </Text>\r\n            <Text\r\n              style={styles.status}\r\n            >\r\n              Status\r\n            </Text>\r\n            <Text\r\n              style={styles.bookStatus}\r\n            >\r\n              {this.state.bookStatus}\r\n            </Text>\r\n          </View>\r\n          <View\r\n            style={styles.buttonView}\r\n          >\r\n            <TouchableOpacity\r\n              style={styles.button}\r\n              onPress={() => {\r\n                this.sendNotification();\r\n                this.updateBookRequestStatus();\r\n                this.receivedBooks(this.state.requestedBookName);\r\n              }}\r\n            >\r\n              <Text\r\n                style={styles.buttontxt}\r\n              >\r\n                Book Recived\r\n              </Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n      );\r\n    }\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        <View style={{ flex: 0.1 }}>\r\n          <MyHeader title=\"Request Book\" navigation={this.props.navigation} />\r\n        </View>\r\n        <View style={{ flex: 0.9 }}>\r\n          <Input\r\n            style={styles.formTextInput}\r\n            label={\"Book Name\"}\r\n            placeholder={\"Book name\"}\r\n            containerStyle={{ marginTop: RFValue(60) }}\r\n            value={this.state.bookName}\r\n          />\r\n          {this.state.showFlatlist ? (\r\n            <FlatList\r\n              data={this.state.dataSource}\r\n              renderItem={this.renderItem}\r\n              enableEmptySections={true}\r\n              style={{ marginTop: RFValue(10) }}\r\n              keyExtractor={(item, index) => index.toString()}\r\n            />\r\n          ) : (\r\n            <View style={{ alignItems: \"center\" }}>\r\n              <Input\r\n                style={styles.formTextInput}\r\n                containerStyle={{ marginTop: RFValue(30) }}\r\n                multiline\r\n                numberOfLines={8}\r\n                label={\"Reason\"}\r\n                placeholder={\"Why do you need the book\"}\r\n                onChangeText={(text) => {\r\n                  this.setState({\r\n                    reasonToRequest: text,\r\n                  });\r\n                }}\r\n                value={this.state.reasonToRequest}\r\n              />\r\n              <TouchableOpacity\r\n                style={[styles.button, { marginTop: RFValue(30) }]}\r\n                onPress={() => {\r\n                  this.addRequest(\r\n                    this.state.bookName,\r\n                    this.state.reasonToRequest\r\n                  );\r\n                }}\r\n              >\r\n                <Text\r\n                  style={styles.requestbuttontxt}\r\n                >\r\n                  Request\r\n                </Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          )}\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  keyBoardStyle: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  formTextInput: {\r\n    width: \"75%\",\r\n    height: RFValue(35),\r\n    borderWidth: 1,\r\n    padding: 10,\r\n  },\r\n  ImageView:{\r\n    flex: 0.3,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginTop:20\r\n  },\r\n  imageStyle:{\r\n    height: RFValue(150),\r\n    width: RFValue(150),\r\n    alignSelf: \"center\",\r\n    borderWidth: 5,\r\n    borderRadius: RFValue(10),\r\n  },\r\n  bookstatus:{\r\n    flex: 0.4,\r\n    alignItems: \"center\",\r\n\r\n  },\r\n  requestedbookName:{\r\n    fontSize: RFValue(30),\r\n    fontWeight: \"500\",\r\n    padding: RFValue(10),\r\n    fontWeight: \"bold\",\r\n    alignItems:'center',\r\n    marginLeft:RFValue(60)\r\n  },\r\n  status:{\r\n    fontSize: RFValue(20),\r\n    marginTop: RFValue(30),\r\n  },\r\n  bookStatus:{\r\n    fontSize: RFValue(30),\r\n    fontWeight: \"bold\",\r\n    marginTop: RFValue(10),\r\n  },\r\n  buttonView:{\r\n    flex: 0.2,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  buttontxt:{\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n    color: \"#fff\",\r\n  },\r\n  touchableopacity:{\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#DDDDDD\",\r\n    padding: 10,\r\n    width: \"90%\",\r\n  },\r\n  requestbuttontxt:{\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n    color: \"#fff\",\r\n  },\r\n  button: {\r\n    width: \"25%\",\r\n    height: 50,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    borderRadius: RFValue(50),\r\n    backgroundColor: \"#32867d\",\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 8,\r\n    },\r\n    shadowOpacity: 0.44,\r\n    shadowRadius: 10.32,\r\n    elevation: 16,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}