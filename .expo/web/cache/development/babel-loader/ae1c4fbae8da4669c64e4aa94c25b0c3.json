{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _MediaTypeInput;\n\nimport uuidv4 from 'uuid/v4';\nimport * as Permissions from 'expo-permissions';\nimport { PermissionStatus } from 'unimodules-permissions-interface';\nimport { MediaTypeOptions } from \"./ImagePicker.types\";\nvar MediaTypeInput = (_MediaTypeInput = {}, _defineProperty(_MediaTypeInput, MediaTypeOptions.All, 'video/mp4,video/quicktime,video/x-m4v,video/*,image/*'), _defineProperty(_MediaTypeInput, MediaTypeOptions.Images, 'image/*'), _defineProperty(_MediaTypeInput, MediaTypeOptions.Videos, 'video/mp4,video/quicktime,video/x-m4v,video/*'), _MediaTypeInput);\nexport default {\n  get name() {\n    return 'ExponentImagePicker';\n  },\n\n  launchImageLibraryAsync: function launchImageLibraryAsync(_ref) {\n    var _ref$mediaTypes, mediaTypes, _ref$allowsMultipleSe, allowsMultipleSelection;\n\n    return _regeneratorRuntime.async(function launchImageLibraryAsync$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _ref$mediaTypes = _ref.mediaTypes, mediaTypes = _ref$mediaTypes === void 0 ? MediaTypeOptions.All : _ref$mediaTypes, _ref$allowsMultipleSe = _ref.allowsMultipleSelection, allowsMultipleSelection = _ref$allowsMultipleSe === void 0 ? false : _ref$allowsMultipleSe;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(openFileBrowserAsync({\n              mediaTypes: mediaTypes,\n              allowsMultipleSelection: allowsMultipleSelection\n            }));\n\n          case 3:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  launchCameraAsync: function launchCameraAsync(_ref2) {\n    var _ref2$mediaTypes, mediaTypes, _ref2$allowsMultipleS, allowsMultipleSelection;\n\n    return _regeneratorRuntime.async(function launchCameraAsync$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _ref2$mediaTypes = _ref2.mediaTypes, mediaTypes = _ref2$mediaTypes === void 0 ? MediaTypeOptions.All : _ref2$mediaTypes, _ref2$allowsMultipleS = _ref2.allowsMultipleSelection, allowsMultipleSelection = _ref2$allowsMultipleS === void 0 ? false : _ref2$allowsMultipleS;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(openFileBrowserAsync({\n              mediaTypes: mediaTypes,\n              allowsMultipleSelection: allowsMultipleSelection,\n              capture: true\n            }));\n\n          case 3:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  getCameraPermissionAsync: function getCameraPermissionAsync() {\n    return _regeneratorRuntime.async(function getCameraPermissionAsync$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            return _context3.abrupt(\"return\", Permissions.getAsync(Permissions.CAMERA));\n\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  requestCameraPermissionsAsync: function requestCameraPermissionsAsync() {\n    return _regeneratorRuntime.async(function requestCameraPermissionsAsync$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            return _context4.abrupt(\"return\", Permissions.askAsync(Permissions.CAMERA));\n\n          case 1:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  getCameraRollPermissionsAsync: function getCameraRollPermissionsAsync() {\n    return _regeneratorRuntime.async(function getCameraRollPermissionsAsync$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            return _context5.abrupt(\"return\", permissionGrantedResponse());\n\n          case 1:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  requestCameraRollPermissionsAsync: function requestCameraRollPermissionsAsync() {\n    return _regeneratorRuntime.async(function requestCameraRollPermissionsAsync$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            return _context6.abrupt(\"return\", permissionGrantedResponse());\n\n          case 1:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n};\n\nfunction permissionGrantedResponse() {\n  return {\n    status: PermissionStatus.GRANTED,\n    expires: 'never',\n    granted: true,\n    canAskAgain: true\n  };\n}\n\nfunction openFileBrowserAsync(_ref3) {\n  var mediaTypes = _ref3.mediaTypes,\n      _ref3$capture = _ref3.capture,\n      capture = _ref3$capture === void 0 ? false : _ref3$capture,\n      _ref3$allowsMultipleS = _ref3.allowsMultipleSelection,\n      allowsMultipleSelection = _ref3$allowsMultipleS === void 0 ? false : _ref3$allowsMultipleS;\n  var mediaTypeFormat = MediaTypeInput[mediaTypes];\n  var input = document.createElement('input');\n  input.style.display = 'none';\n  input.setAttribute('type', 'file');\n  input.setAttribute('accept', mediaTypeFormat);\n  input.setAttribute('id', uuidv4());\n\n  if (allowsMultipleSelection) {\n    input.setAttribute('multiple', 'multiple');\n  }\n\n  if (capture) {\n    input.setAttribute('capture', 'camera');\n  }\n\n  document.body.appendChild(input);\n  return new Promise(function (resolve, reject) {\n    input.addEventListener('change', function () {\n      if (input.files) {\n        var targetFile = input.files[0];\n        var reader = new FileReader();\n\n        reader.onerror = function () {\n          reject(new Error(\"Failed to read the selected media because the operation failed.\"));\n        };\n\n        reader.onload = function (_ref4) {\n          var target = _ref4.target;\n          var uri = target.result;\n          resolve({\n            cancelled: false,\n            uri: uri,\n            width: 0,\n            height: 0\n          });\n        };\n\n        reader.readAsDataURL(targetFile);\n      } else {\n        resolve({\n          cancelled: true\n        });\n      }\n\n      document.body.removeChild(input);\n    });\n    var event = new MouseEvent('click');\n    input.dispatchEvent(event);\n  });\n}","map":{"version":3,"sources":["../src/ExponentImagePicker.web.ts"],"names":[],"mappings":"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","sourcesContent":["import uuidv4 from 'uuid/v4';\nimport * as Permissions from 'expo-permissions';\nimport { PermissionResponse, PermissionStatus } from 'unimodules-permissions-interface';\n\nimport {\n  ImagePickerResult,\n  MediaTypeOptions,\n  OpenFileBrowserOptions,\n  ImagePickerOptions,\n} from './ImagePicker.types';\n\nconst MediaTypeInput = {\n  [MediaTypeOptions.All]: 'video/mp4,video/quicktime,video/x-m4v,video/*,image/*',\n  [MediaTypeOptions.Images]: 'image/*',\n  [MediaTypeOptions.Videos]: 'video/mp4,video/quicktime,video/x-m4v,video/*',\n};\n\nexport default {\n  get name(): string {\n    return 'ExponentImagePicker';\n  },\n\n  async launchImageLibraryAsync({\n    mediaTypes = MediaTypeOptions.All,\n    allowsMultipleSelection = false,\n  }: ImagePickerOptions): Promise<ImagePickerResult> {\n    return await openFileBrowserAsync({\n      mediaTypes,\n      allowsMultipleSelection,\n    });\n  },\n\n  async launchCameraAsync({\n    mediaTypes = MediaTypeOptions.All,\n    allowsMultipleSelection = false,\n  }: ImagePickerOptions): Promise<ImagePickerResult> {\n    return await openFileBrowserAsync({\n      mediaTypes,\n      allowsMultipleSelection,\n      capture: true,\n    });\n  },\n\n  /*\n   * Delegate to expo-permissions to request camera permissions\n   */\n  async getCameraPermissionAsync() {\n    return Permissions.getAsync(Permissions.CAMERA);\n  },\n  async requestCameraPermissionsAsync() {\n    return Permissions.askAsync(Permissions.CAMERA);\n  },\n\n  /*\n   * Camera roll permissions don't need to be requested on web, so we always\n   * respond with granted.\n   */\n  async getCameraRollPermissionsAsync(): Promise<PermissionResponse> {\n    return permissionGrantedResponse();\n  },\n  async requestCameraRollPermissionsAsync(): Promise<PermissionResponse> {\n    return permissionGrantedResponse();\n  },\n};\n\nfunction permissionGrantedResponse(): PermissionResponse {\n  return {\n    status: PermissionStatus.GRANTED,\n    expires: 'never',\n    granted: true,\n    canAskAgain: true,\n  };\n}\n\nfunction openFileBrowserAsync({\n  mediaTypes,\n  capture = false,\n  allowsMultipleSelection = false,\n}: OpenFileBrowserOptions): Promise<ImagePickerResult> {\n  const mediaTypeFormat = MediaTypeInput[mediaTypes];\n\n  const input = document.createElement('input');\n  input.style.display = 'none';\n  input.setAttribute('type', 'file');\n  input.setAttribute('accept', mediaTypeFormat);\n  input.setAttribute('id', uuidv4());\n  if (allowsMultipleSelection) {\n    input.setAttribute('multiple', 'multiple');\n  }\n  if (capture) {\n    input.setAttribute('capture', 'camera');\n  }\n  document.body.appendChild(input);\n\n  return new Promise((resolve, reject) => {\n    input.addEventListener('change', () => {\n      if (input.files) {\n        const targetFile = input.files[0];\n        const reader = new FileReader();\n        reader.onerror = () => {\n          reject(new Error(`Failed to read the selected media because the operation failed.`));\n        };\n        reader.onload = ({ target }) => {\n          const uri = (target as any).result;\n          resolve({\n            cancelled: false,\n            uri,\n            width: 0,\n            height: 0,\n          });\n        };\n        // Read in the image file as a binary string.\n        reader.readAsDataURL(targetFile);\n      } else {\n        resolve({ cancelled: true });\n      }\n\n      document.body.removeChild(input);\n    });\n\n    const event = new MouseEvent('click');\n    input.dispatchEvent(event);\n  });\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}