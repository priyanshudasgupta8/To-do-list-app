{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport firebase from \"firebase\";\nimport RFValue from \"react-native-responsive-fontsize\";\n\nvar WelcomeScreen = function (_Component) {\n  _inherits(WelcomeScreen, _Component);\n\n  var _super = _createSuper(WelcomeScreen);\n\n  function WelcomeScreen() {\n    var _this;\n\n    _classCallCheck(this, WelcomeScreen);\n\n    _this = _super.call(this);\n\n    _this.hi = function () {\n      {}\n    };\n\n    _this.state = {\n      emailId: \"\",\n      password: \"\",\n      firstName: \"\",\n      lastName: \"\",\n      address: \"\",\n      contact: \"\",\n      confirmPassword: \"\",\n      isModalVisible: \"false\"\n    };\n    return _this;\n  }\n\n  return WelcomeScreen;\n}(Component);\n\nexport { WelcomeScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#6fc0b8\"\n  },\n  loginBox: {\n    width: \"80%\",\n    height: RFValue(50),\n    borderWidth: 1.5,\n    borderColor: \"#ffffff\",\n    fontSize: RFValue(20),\n    paddingLeft: RFValue(10)\n  },\n  button: {\n    width: \"80%\",\n    height: RFValue(50),\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: RFValue(25),\n    backgroundColor: \"#ffff\",\n    shadowColor: \"#000\",\n    marginBottom: RFValue(10),\n    shadowOffset: {\n      width: 0,\n      height: 8\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 10.32,\n    elevation: 16\n  },\n  buttonText: {\n    color: \"#32867d\",\n    fontWeight: \"200\",\n    fontSize: RFValue(20)\n  },\n  label: {\n    fontSize: RFValue(13),\n    color: \"#717D7E\",\n    fontWeight: 'bold',\n    paddingLeft: RFValue(10),\n    marginLeft: RFValue(20)\n  },\n  formInput: {\n    width: \"90%\",\n    height: RFValue(45),\n    padding: RFValue(10),\n    borderWidth: 1,\n    borderRadius: 2,\n    borderColor: \"grey\",\n    paddingBottom: RFValue(10),\n    marginLeft: RFValue(20),\n    marginBottom: RFValue(14)\n  },\n  registerButton: {\n    width: \"75%\",\n    height: RFValue(50),\n    marginTop: RFValue(20),\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: RFValue(3),\n    backgroundColor: \"#32867d\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 8\n    },\n    shadowOpacity: 0.44,\n    shadowRadius: 10.32,\n    elevation: 16,\n    marginTop: RFValue(10)\n  },\n  registerButtonText: {\n    fontSize: RFValue(23),\n    fontWeight: \"bold\",\n    color: \"#fff\"\n  },\n  cancelButtonText: {\n    fontSize: RFValue(20),\n    fontWeight: 'bold',\n    color: \"#32867d\",\n    marginTop: RFValue(10)\n  },\n  scrollview: {\n    flex: 1,\n    backgroundColor: \"#fff\"\n  },\n  signupView: {\n    flex: 0.05,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  signupText: {\n    fontSize: RFValue(20),\n    fontWeight: \"bold\",\n    color: \"#32867d\"\n  },\n  santaView: {\n    flex: 0.85,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: RFValue(10)\n  },\n  santaImage: {\n    width: \"70%\",\n    height: \"100%\",\n    resizeMode: \"stretch\"\n  },\n  TextInput: {\n    flex: 0.5,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  bookImage: {\n    width: \"100%\",\n    height: RFValue(220)\n  }\n});","map":{"version":3,"sources":["F:/Projects/To-Do List App/to-do-list/screens/WelcomeScreen.js"],"names":["React","Component","firebase","RFValue","WelcomeScreen","hi","state","emailId","password","firstName","lastName","address","contact","confirmPassword","isModalVisible","styles","StyleSheet","create","container","flex","backgroundColor","loginBox","width","height","borderWidth","borderColor","fontSize","paddingLeft","button","justifyContent","alignItems","borderRadius","shadowColor","marginBottom","shadowOffset","shadowOpacity","shadowRadius","elevation","buttonText","color","fontWeight","label","marginLeft","formInput","padding","paddingBottom","registerButton","marginTop","registerButtonText","cancelButtonText","scrollview","signupView","signupText","santaView","santaImage","resizeMode","TextInput","bookImage"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  Image,\r\n  Modal,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  Alert,\r\n  ScrollView,\r\n} from \"react-native\";\r\n\r\nimport firebase from \"firebase\";\r\nimport RFValue from \"react-native-responsive-fontsize\"\r\n\r\nexport default class WelcomeScreen extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      emailId: \"\",\r\n      password: \"\",\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      address: \"\",\r\n      contact: \"\",\r\n      confirmPassword: \"\",\r\n      isModalVisible: \"false\",\r\n    };\r\n  }\r\n\r\n  hi = () => {\r\n    {/*userSignUp = (emailId, password, confirmPassword) => {\r\n    if (password !== confirmPassword) {\r\n      return Alert.alert(\"password doesn't match\\nCheck your password.\");\r\n    } else {\r\n      firebase\r\n        .auth()\r\n        .createUserWithEmailAndPassword(emailId, password)\r\n        .then(() => {\r\n          db.collection(\"users\").add({\r\n            first_name: this.state.firstName,\r\n            last_name: this.state.lastName,\r\n            contact: this.state.contact,\r\n            email_id: this.state.emailId,\r\n            address: this.state.address,\r\n            IsBookRequestActive: false,\r\n          });\r\n          return Alert.alert(\"User Added Successfully\", \"\", [\r\n            {\r\n              text: \"OK\",\r\n              onPress: () => this.setState({ isModalVisible: false }),\r\n            },\r\n          ]);\r\n        })\r\n        .catch((error) => {\r\n          // Handle Errors here.\r\n          var errorCode = error.code;\r\n          var errorMessage = error.message;\r\n          return Alert.alert(errorMessage);\r\n        });\r\n    }\r\n  };\r\n\r\n  userLogin = (emailId, password) => {\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(emailId, password)\r\n      .then(() => {\r\n        this.props.navigation.navigate(\"DonateBooks\");\r\n      })\r\n      .catch((error) => {\r\n        var errorCode = error.code;\r\n        var errorMessage = error.message;\r\n        return Alert.alert(errorMessage);\r\n      });\r\n  };\r\n\r\n  showModal = () => {\r\n    return (\r\n      <Modal\r\n        animationType=\"slide\"\r\n        transparent={true}\r\n        visible={this.state.isModalVisible}\r\n      >\r\n        <ScrollView style={styles.scrollview}>\r\n          <View style={styles.signupView}>\r\n            <Text style={styles.signupText}> SIGN UP </Text>\r\n          </View>\r\n              <View style={{flex:0.95}}>\r\n                  <Text style={styles.label}>First Name </Text>\r\n                  <TextInput\r\n                    style={styles.formInput}\r\n                    placeholder={\"First Name\"}\r\n                    maxLength={12}\r\n                    onChangeText={(text) => {\r\n                      this.setState({\r\n                        firstName: text,\r\n                      });\r\n                    }}\r\n                  />\r\n\r\n                  <Text style={styles.label}>Last Name </Text>\r\n                  <TextInput\r\n                    style={styles.formInput}\r\n                    placeholder={\"Last Name\"}\r\n                    maxLength={12}\r\n                    onChangeText={(text) => {\r\n                      this.setState({\r\n                        lastName: text,\r\n                      });\r\n                    }}\r\n                  />\r\n\r\n                  <Text style={styles.label}>Contact </Text>\r\n                  <TextInput\r\n                    style={styles.formInput}\r\n                    placeholder={\"Contact\"}\r\n                    maxLength={10}\r\n                    keyboardType={\"numeric\"}\r\n                    onChangeText={(text) => {\r\n                      this.setState({\r\n                        contact: text,\r\n                      });\r\n                    }}\r\n                  />\r\n\r\n                  <Text style={styles.label}> Address </Text>\r\n                  <TextInput\r\n                    style={styles.formInput}\r\n                    placeholder={\"Address\"}\r\n                    multiline={true}\r\n                    onChangeText={(text) => {\r\n                      this.setState({\r\n                        address: text,\r\n                      });\r\n                    }}\r\n                  />\r\n\r\n                  <Text style={styles.label}>Email </Text>\r\n                  <TextInput\r\n                    style={styles.formInput}\r\n                    placeholder={\"Email\"}\r\n                    keyboardType={\"email-address\"}\r\n                    onChangeText={(text) => {\r\n                      this.setState({\r\n                        emailId: text,\r\n                      });\r\n                    }}\r\n                  />\r\n\r\n                  <Text style={styles.label}> Password </Text>\r\n                  <TextInput\r\n                    style={styles.formInput}\r\n                    placeholder={\"Password\"}\r\n                    secureTextEntry={true}\r\n                    onChangeText={(text) => {\r\n                      this.setState({\r\n                        password: text,\r\n                      });\r\n                    }}\r\n                  />\r\n\r\n                  <Text style={styles.label}>Confirm Password</Text>\r\n                  <TextInput\r\n                    style={styles.formInput}\r\n                    placeholder={\"Confrim Password\"}\r\n                    secureTextEntry={true}\r\n                    onChangeText={(text) => {\r\n                      this.setState({\r\n                        confirmPassword: text,\r\n                      });\r\n                    }}\r\n                  />\r\n              </View>\r\n\r\n            <View style={{flex:0.2,alignItems:'center'}}>\r\n              <TouchableOpacity\r\n                style={styles.registerButton}\r\n                onPress={() =>\r\n                  this.userSignUp(\r\n                    this.state.emailId,\r\n                    this.state.password,\r\n                    this.state.confirmPassword\r\n                  )\r\n                }\r\n              >\r\n                <Text style={styles.registerButtonText}>Register</Text>\r\n              </TouchableOpacity>\r\n              <Text\r\n               style={styles.cancelButtonText}\r\n               onPress={() => {\r\n                 this.setState({ isModalVisible: false });\r\n               }}\r\n              >\r\n              Cancel\r\n              </Text>\r\n            </View>\r\n        </ScrollView>\r\n      </Modal>\r\n    );\r\n  };\r\n  render() {\r\n    return (\r\n      <View style={styles.container}>\r\n        {this.showModal()}\r\n        <View\r\n          style={{ flex: 0.25}}\r\n        >\r\n        <View style={{flex:0.15}}/>\r\n        <View style={styles.santaView}>\r\n          <Image\r\n          source={require('../assets/santa.png')}\r\n          style={styles.santaImage}\r\n           />\r\n         </View>\r\n        </View>\r\n        <View style={{ flex: 0.45 }}>\r\n\r\n          <View style={styles.TextInput}>\r\n          <TextInput\r\n            style={styles.loginBox}\r\n            placeholder=\"abc@example.com\"\r\n            placeholderTextColor=\"gray\"\r\n            keyboardType=\"email-address\"\r\n            onChangeText={(text) => {\r\n              this.setState({\r\n                emailId: text,\r\n              });\r\n            }}\r\n          />\r\n          <TextInput\r\n            style={[styles.loginBox,{marginTop:RFValue(15)}]}\r\n            secureTextEntry={true}\r\n            placeholder=\"Enter Password\"\r\n            placeholderTextColor=\"gray\"\r\n            onChangeText={(text) => {\r\n              this.setState({\r\n                password: text,\r\n              });\r\n            }}\r\n          />\r\n          </View>\r\n          <View style={{flex:0.5,  alignItems:\"center\",}}>\r\n          <TouchableOpacity\r\n            style={styles.button}\r\n            onPress={() => {\r\n              this.userLogin(this.state.emailId, this.state.password);  \r\n            }}\r\n          >\r\n            <Text style={styles.buttonText}>Login</Text>\r\n          </TouchableOpacity>\r\n\r\n          <TouchableOpacity\r\n            style={styles.button}\r\n            onPress={() => this.setState({ isModalVisible: true })}\r\n          >\r\n            <Text style={styles.buttonText}>SignUp</Text>\r\n          </TouchableOpacity>\r\n\r\n          </View>\r\n        </View>\r\n\r\n        <View\r\n          style={{ flex: 0.3}}\r\n        >\r\n        <Image\r\n        source={require('../assets/book.png')}\r\n        style={styles.bookImage}\r\n        resizeMode={\"stretch\"}\r\n         />\r\n        </View>\r\n      </View>\r\n          ); */}\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#6fc0b8\",\r\n  },\r\n  loginBox: {\r\n    width: \"80%\",\r\n    height: RFValue(50),\r\n    borderWidth: 1.5,\r\n    borderColor: \"#ffffff\",\r\n    fontSize: RFValue(20),\r\n    paddingLeft: RFValue(10),\r\n  },\r\n  button: {\r\n    width: \"80%\",\r\n    height: RFValue(50),\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    borderRadius: RFValue(25),\r\n    backgroundColor: \"#ffff\",\r\n    shadowColor: \"#000\",\r\n    marginBottom:RFValue(10),\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 8,\r\n    },\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 10.32,\r\n    elevation: 16,\r\n  },\r\n  buttonText: {\r\n    color: \"#32867d\",\r\n    fontWeight: \"200\",\r\n    fontSize: RFValue(20),\r\n  },\r\n  label:{\r\n    fontSize:RFValue(13),\r\n    color:\"#717D7E\",\r\n    fontWeight:'bold',\r\n    paddingLeft:RFValue(10),\r\n    marginLeft:RFValue(20)\r\n  },\r\n  formInput: {\r\n    width: \"90%\",\r\n    height: RFValue(45),\r\n    padding: RFValue(10),\r\n    borderWidth:1,\r\n    borderRadius:2,\r\n    borderColor:\"grey\",\r\n    paddingBottom:RFValue(10),\r\n    marginLeft:RFValue(20),\r\n    marginBottom:RFValue(14)\r\n  },\r\n  registerButton: {\r\n    width: \"75%\",\r\n    height: RFValue(50),\r\n    marginTop:RFValue(20),\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    borderRadius: RFValue(3),\r\n    backgroundColor: \"#32867d\",\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 8,\r\n    },\r\n    shadowOpacity: 0.44,\r\n    shadowRadius: 10.32,\r\n    elevation: 16,\r\n    marginTop: RFValue(10),\r\n  },\r\n  registerButtonText: {\r\n    fontSize: RFValue(23),\r\n    fontWeight: \"bold\",\r\n    color: \"#fff\",\r\n  },\r\n  cancelButtonText:{\r\n    fontSize : RFValue(20),\r\n    fontWeight:'bold',\r\n    color: \"#32867d\",\r\n    marginTop:RFValue(10)\r\n  },\r\n  scrollview:{\r\n    flex: 1,\r\n    backgroundColor: \"#fff\"\r\n  },\r\n  signupView:{\r\n    flex:0.05,\r\n    justifyContent:'center',\r\n    alignItems:'center'\r\n},\r\nsignupText:{\r\n  fontSize:RFValue(20),\r\n  fontWeight:\"bold\",\r\n  color:\"#32867d\"\r\n},\r\nsantaView:{\r\n  flex:0.85,\r\n  justifyContent:\"center\",\r\n  alignItems:\"center\",\r\n  padding:RFValue(10)\r\n},\r\nsantaImage:{\r\n  width:\"70%\",\r\n  height:\"100%\",\r\n  resizeMode:\"stretch\"\r\n},\r\nTextInput:{\r\n  flex:0.5,\r\n  alignItems:\"center\",\r\n  justifyContent:\"center\"\r\n},\r\nbookImage:{\r\n  width:\"100%\",\r\n  height:RFValue(220)\r\n}\r\n});\r\n"]},"metadata":{},"sourceType":"module"}