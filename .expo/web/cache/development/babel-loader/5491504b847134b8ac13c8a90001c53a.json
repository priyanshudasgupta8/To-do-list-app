{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"F:\\\\Projects\\\\To-Do List App\\\\to-do-list\\\\screens\\\\SettingScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Card } from \"react-native-elements\";\nimport MyHeader from \"../components/MyHeader\";\nimport db from \"../config\";\nimport firebase from \"firebase\";\nimport { RFValue } from \"react-native-responsive-fontsize\";\n\nvar SettingScreen = function (_Component) {\n  _inherits(SettingScreen, _Component);\n\n  var _super = _createSuper(SettingScreen);\n\n  function SettingScreen() {\n    var _this;\n\n    _classCallCheck(this, SettingScreen);\n\n    _this = _super.call(this);\n\n    _this.getUserDetails = function () {\n      var email = firebase.auth().currentUser.email;\n      db.collection(\"users\").where(\"email_id\", \"==\", email).get().then(function (snapshot) {\n        snapshot.forEach(function (doc) {\n          var data = doc.data();\n\n          _this.setState({\n            emailId: data.email_id,\n            firstName: data.first_name,\n            lastName: data.last_name,\n            address: data.address,\n            contact: data.contact,\n            docId: doc.id\n          });\n        });\n      });\n    };\n\n    _this.updateUserDetails = function () {\n      db.collection(\"users\").doc(_this.state.docId).update({\n        first_name: _this.state.firstName,\n        last_name: _this.state.lastName,\n        address: _this.state.address,\n        contact: _this.state.contact\n      });\n      Alert.alert(\"Profile Updated Successfully\");\n    };\n\n    _this.state = {\n      emailId: \"\",\n      firstName: \"\",\n      lastName: \"\",\n      address: \"\",\n      contact: \"\",\n      docId: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(SettingScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getUserDetails();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 0.12\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }\n      }, React.createElement(MyHeader, {\n        title: \"Settings\",\n        navigation: this.props.navigation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }\n      })), React.createElement(View, {\n        style: styles.formContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 0.66,\n          padding: RFValue(10)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.label,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }\n      }, \"First Name \"), React.createElement(TextInput, {\n        style: styles.formTextInput,\n        placeholder: \"First Name\",\n        maxLength: 12,\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            firstName: text\n          });\n        },\n        value: this.state.firstName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }\n      }), React.createElement(Text, {\n        style: styles.label,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }\n      }, \"Last Name \"), React.createElement(TextInput, {\n        style: styles.formTextInput,\n        placeholder: \"Last Name\",\n        maxLength: 12,\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            lastName: text\n          });\n        },\n        value: this.state.lastName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }\n      }), React.createElement(Text, {\n        style: styles.label,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }\n      }, \"Contact \"), React.createElement(TextInput, {\n        style: styles.formTextInput,\n        placeholder: \"Contact\",\n        maxLength: 10,\n        keyboardType: \"numeric\",\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            contact: text\n          });\n        },\n        value: this.state.contact,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }\n      }), React.createElement(Text, {\n        style: styles.label,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }\n      }, \"Address \"), React.createElement(TextInput, {\n        style: styles.formTextInput,\n        placeholder: \"Address\",\n        multiline: true,\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            address: text\n          });\n        },\n        value: this.state.address,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 15\n        }\n      })), React.createElement(View, {\n        style: styles.buttonView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 15\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.button,\n        onPress: function onPress() {\n          _this2.updateUserDetails();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.buttonText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 19\n        }\n      }, \"Save\")))));\n    }\n  }]);\n\n  return SettingScreen;\n}(Component);\n\nexport { SettingScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"#6fc0b8\"\n  },\n  formContainer: {\n    flex: 0.88,\n    justifyContent: 'center'\n  },\n  label: {\n    fontSize: RFValue(18),\n    color: \"#717D7E\",\n    fontWeight: 'bold',\n    padding: RFValue(10),\n    marginLeft: RFValue(20)\n  },\n  formTextInput: {\n    width: \"90%\",\n    height: RFValue(50),\n    padding: RFValue(10),\n    borderWidth: 1,\n    borderRadius: 2,\n    borderColor: \"grey\",\n    marginBottom: RFValue(20),\n    marginLeft: RFValue(20)\n  },\n  button: {\n    width: \"75%\",\n    height: RFValue(60),\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: RFValue(50),\n    backgroundColor: \"#32867d\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 8\n    },\n    shadowOpacity: 0.44,\n    shadowRadius: 10.32,\n    elevation: 16,\n    marginTop: RFValue(20)\n  },\n  buttonView: {\n    flex: 0.22,\n    alignItems: \"center\",\n    marginTop: RFValue(100)\n  },\n  buttonText: {\n    fontSize: RFValue(23),\n    fontWeight: \"bold\",\n    color: \"#fff\"\n  }\n});","map":{"version":3,"sources":["F:/Projects/To-Do List App/to-do-list/screens/SettingScreen.js"],"names":["React","Component","Card","MyHeader","db","firebase","RFValue","SettingScreen","getUserDetails","email","auth","currentUser","collection","where","get","then","snapshot","forEach","doc","data","setState","emailId","email_id","firstName","first_name","lastName","last_name","address","contact","docId","id","updateUserDetails","state","update","Alert","alert","flex","props","navigation","styles","formContainer","padding","label","formTextInput","text","buttonView","button","buttonText","StyleSheet","create","container","alignItems","justifyContent","backgroundColor","fontSize","color","fontWeight","marginLeft","width","height","borderWidth","borderRadius","borderColor","marginBottom","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","marginTop"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;;;;AAWA,SAASC,IAAT,QAAqB,uBAArB;AACA,OAAOC,QAAP;AACA,OAAOC,EAAP;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,SAASC,OAAT,QAAwB,kCAAxB;;IAEqBC,a;;;;;AACnB,2BAAc;AAAA;;AAAA;;AACZ;;AADY,UAYdC,cAZc,GAYG,YAAM;AACrB,UAAIC,KAAK,GAAGJ,QAAQ,CAACK,IAAT,GAAgBC,WAAhB,CAA4BF,KAAxC;AACAL,MAAAA,EAAE,CAACQ,UAAH,CAAc,OAAd,EACGC,KADH,CACS,UADT,EACqB,IADrB,EAC2BJ,KAD3B,EAEGK,GAFH,GAGGC,IAHH,CAGQ,UAACC,QAAD,EAAc;AAClBA,QAAAA,QAAQ,CAACC,OAAT,CAAiB,UAACC,GAAD,EAAS;AACxB,cAAIC,IAAI,GAAGD,GAAG,CAACC,IAAJ,EAAX;;AACA,gBAAKC,QAAL,CAAc;AACZC,YAAAA,OAAO,EAAEF,IAAI,CAACG,QADF;AAEZC,YAAAA,SAAS,EAAEJ,IAAI,CAACK,UAFJ;AAGZC,YAAAA,QAAQ,EAAEN,IAAI,CAACO,SAHH;AAIZC,YAAAA,OAAO,EAAER,IAAI,CAACQ,OAJF;AAKZC,YAAAA,OAAO,EAAET,IAAI,CAACS,OALF;AAMZC,YAAAA,KAAK,EAAEX,GAAG,CAACY;AANC,WAAd;AAQD,SAVD;AAWD,OAfH;AAgBD,KA9Ba;;AAAA,UAgCdC,iBAhCc,GAgCM,YAAM;AACxB3B,MAAAA,EAAE,CAACQ,UAAH,CAAc,OAAd,EAAuBM,GAAvB,CAA2B,MAAKc,KAAL,CAAWH,KAAtC,EAA6CI,MAA7C,CAAoD;AAClDT,QAAAA,UAAU,EAAE,MAAKQ,KAAL,CAAWT,SAD2B;AAElDG,QAAAA,SAAS,EAAE,MAAKM,KAAL,CAAWP,QAF4B;AAGlDE,QAAAA,OAAO,EAAE,MAAKK,KAAL,CAAWL,OAH8B;AAIlDC,QAAAA,OAAO,EAAE,MAAKI,KAAL,CAAWJ;AAJ8B,OAApD;AAOAM,MAAAA,KAAK,CAACC,KAAN,CAAY,8BAAZ;AACD,KAzCa;;AAEZ,UAAKH,KAAL,GAAa;AACXX,MAAAA,OAAO,EAAE,EADE;AAEXE,MAAAA,SAAS,EAAE,EAFA;AAGXE,MAAAA,QAAQ,EAAE,EAHC;AAIXE,MAAAA,OAAO,EAAE,EAJE;AAKXC,MAAAA,OAAO,EAAE,EALE;AAMXC,MAAAA,KAAK,EAAE;AANI,KAAb;AAFY;AAUb;;;;wCAiCmB;AAClB,WAAKrB,cAAL;AACD;;;6BAEQ;AAAA;;AACP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAE4B,UAAAA,IAAI,EAAE;AAAR,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEA,UAAAA,IAAI,EAAE;AAAR,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAC,UAAhB;AAA2B,QAAA,UAAU,EAAE,KAAKC,KAAL,CAAWC,UAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAME,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AACE,QAAA,KAAK,EAAE;AACLJ,UAAAA,IAAI,EAAE,IADD;AAELK,UAAAA,OAAO,EAAEnC,OAAO,CAAC,EAAD;AAFX,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMA,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEiC,MAAM,CAACG,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBANA,EAOE,oBAAC,SAAD;AACE,QAAA,KAAK,EAAEH,MAAM,CAACI,aADhB;AAEE,QAAA,WAAW,EAAE,YAFf;AAGE,QAAA,SAAS,EAAE,EAHb;AAIE,QAAA,YAAY,EAAE,sBAACC,IAAD,EAAU;AACtB,UAAA,MAAI,CAACxB,QAAL,CAAc;AACZG,YAAAA,SAAS,EAAEqB;AADC,WAAd;AAGD,SARH;AASE,QAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWT,SATpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,EAmBA,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEgB,MAAM,CAACG,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAnBA,EAoBE,oBAAC,SAAD;AACE,QAAA,KAAK,EAAEH,MAAM,CAACI,aADhB;AAEE,QAAA,WAAW,EAAE,WAFf;AAGE,QAAA,SAAS,EAAE,EAHb;AAIE,QAAA,YAAY,EAAE,sBAACC,IAAD,EAAU;AACtB,UAAA,MAAI,CAACxB,QAAL,CAAc;AACZK,YAAAA,QAAQ,EAAEmB;AADE,WAAd;AAGD,SARH;AASE,QAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWP,QATpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QApBF,EAgCI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEc,MAAM,CAACG,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAhCJ,EAiCE,oBAAC,SAAD;AACE,QAAA,KAAK,EAAEH,MAAM,CAACI,aADhB;AAEE,QAAA,WAAW,EAAE,SAFf;AAGE,QAAA,SAAS,EAAE,EAHb;AAIE,QAAA,YAAY,EAAE,SAJhB;AAKE,QAAA,YAAY,EAAE,sBAACC,IAAD,EAAU;AACtB,UAAA,MAAI,CAACxB,QAAL,CAAc;AACZQ,YAAAA,OAAO,EAAEgB;AADG,WAAd;AAGD,SATH;AAUE,QAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWJ,OAVpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAjCF,EA8CI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEW,MAAM,CAACG,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBA9CJ,EA+CE,oBAAC,SAAD;AACE,QAAA,KAAK,EAAEH,MAAM,CAACI,aADhB;AAEE,QAAA,WAAW,EAAE,SAFf;AAGE,QAAA,SAAS,EAAE,IAHb;AAIE,QAAA,YAAY,EAAE,sBAACC,IAAD,EAAU;AACtB,UAAA,MAAI,CAACxB,QAAL,CAAc;AACZO,YAAAA,OAAO,EAAEiB;AADG,WAAd;AAGD,SARH;AASE,QAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWL,OATpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA/CF,CADJ,EA4DM,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEY,MAAM,CAACM,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,gBAAD;AACE,QAAA,KAAK,EAAEN,MAAM,CAACO,MADhB;AAEE,QAAA,OAAO,EAAE,mBAAM;AACb,UAAA,MAAI,CAACf,iBAAL;AACD,SAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAME,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEQ,MAAM,CAACQ,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,CADF,CA5DN,CANF,CADF;AAgFD;;;;EAjIwC9C,S;;SAAtBM,a;AAoIrB,IAAMgC,MAAM,GAAGS,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTd,IAAAA,IAAI,EAAE,CADG;AAETe,IAAAA,UAAU,EAAE,QAFH;AAGTC,IAAAA,cAAc,EAAE,QAHP;AAITC,IAAAA,eAAe,EAAC;AAJP,GADoB;AAO/Bb,EAAAA,aAAa,EAAC;AACZJ,IAAAA,IAAI,EAAE,IADM;AAEZgB,IAAAA,cAAc,EAAC;AAFH,GAPiB;AAW/BV,EAAAA,KAAK,EAAC;AACJY,IAAAA,QAAQ,EAAChD,OAAO,CAAC,EAAD,CADZ;AAEJiD,IAAAA,KAAK,EAAC,SAFF;AAGJC,IAAAA,UAAU,EAAC,MAHP;AAIJf,IAAAA,OAAO,EAACnC,OAAO,CAAC,EAAD,CAJX;AAKJmD,IAAAA,UAAU,EAACnD,OAAO,CAAC,EAAD;AALd,GAXyB;AAkB/BqC,EAAAA,aAAa,EAAE;AACbe,IAAAA,KAAK,EAAE,KADM;AAEbC,IAAAA,MAAM,EAAErD,OAAO,CAAC,EAAD,CAFF;AAGbmC,IAAAA,OAAO,EAAEnC,OAAO,CAAC,EAAD,CAHH;AAIbsD,IAAAA,WAAW,EAAC,CAJC;AAKbC,IAAAA,YAAY,EAAC,CALA;AAMbC,IAAAA,WAAW,EAAC,MANC;AAObC,IAAAA,YAAY,EAACzD,OAAO,CAAC,EAAD,CAPP;AAQbmD,IAAAA,UAAU,EAACnD,OAAO,CAAC,EAAD;AARL,GAlBgB;AA4B/BwC,EAAAA,MAAM,EAAE;AACNY,IAAAA,KAAK,EAAE,KADD;AAENC,IAAAA,MAAM,EAAErD,OAAO,CAAC,EAAD,CAFT;AAGN8C,IAAAA,cAAc,EAAE,QAHV;AAIND,IAAAA,UAAU,EAAE,QAJN;AAKNU,IAAAA,YAAY,EAAEvD,OAAO,CAAC,EAAD,CALf;AAMN+C,IAAAA,eAAe,EAAE,SANX;AAONW,IAAAA,WAAW,EAAE,MAPP;AAQNC,IAAAA,YAAY,EAAE;AACZP,MAAAA,KAAK,EAAE,CADK;AAEZC,MAAAA,MAAM,EAAE;AAFI,KARR;AAYNO,IAAAA,aAAa,EAAE,IAZT;AAaNC,IAAAA,YAAY,EAAE,KAbR;AAcNC,IAAAA,SAAS,EAAE,EAdL;AAeNC,IAAAA,SAAS,EAAE/D,OAAO,CAAC,EAAD;AAfZ,GA5BuB;AA6C/BuC,EAAAA,UAAU,EAAC;AACTT,IAAAA,IAAI,EAAE,IADG;AAETe,IAAAA,UAAU,EAAE,QAFH;AAGTkB,IAAAA,SAAS,EAAC/D,OAAO,CAAC,GAAD;AAHR,GA7CoB;AAkD/ByC,EAAAA,UAAU,EAAE;AACVO,IAAAA,QAAQ,EAAEhD,OAAO,CAAC,EAAD,CADP;AAEVkD,IAAAA,UAAU,EAAE,MAFF;AAGVD,IAAAA,KAAK,EAAE;AAHG;AAlDmB,CAAlB,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  KeyboardAvoidingView,\r\n  StyleSheet,\r\n  ScrollView,\r\n  TouchableOpacity,\r\n  Alert,\r\n} from \"react-native\";\r\nimport { Card } from \"react-native-elements\";\r\nimport MyHeader from \"../components/MyHeader\";\r\nimport db from \"../config\";\r\nimport firebase from \"firebase\";\r\nimport { RFValue } from \"react-native-responsive-fontsize\";\r\n\r\nexport default class SettingScreen extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      emailId: \"\",\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      address: \"\",\r\n      contact: \"\",\r\n      docId: \"\",\r\n    };\r\n  }\r\n\r\n  getUserDetails = () => {\r\n    var email = firebase.auth().currentUser.email;\r\n    db.collection(\"users\")\r\n      .where(\"email_id\", \"==\", email)\r\n      .get()\r\n      .then((snapshot) => {\r\n        snapshot.forEach((doc) => {\r\n          var data = doc.data();\r\n          this.setState({\r\n            emailId: data.email_id,\r\n            firstName: data.first_name,\r\n            lastName: data.last_name,\r\n            address: data.address,\r\n            contact: data.contact,\r\n            docId: doc.id,\r\n          });\r\n        });\r\n      });\r\n  };\r\n\r\n  updateUserDetails = () => {\r\n    db.collection(\"users\").doc(this.state.docId).update({\r\n      first_name: this.state.firstName,\r\n      last_name: this.state.lastName,\r\n      address: this.state.address,\r\n      contact: this.state.contact,\r\n    });\r\n\r\n    Alert.alert(\"Profile Updated Successfully\");\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getUserDetails();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        <View style={{ flex: 0.12 }}>\r\n          <MyHeader title=\"Settings\" navigation={this.props.navigation} />\r\n        </View>\r\n\r\n\r\n        <View style={styles.formContainer}>\r\n            <View\r\n              style={{\r\n                flex: 0.66,\r\n                padding: RFValue(10),\r\n              }}\r\n            >\r\n            <Text style={styles.label}>First Name </Text>\r\n              <TextInput\r\n                style={styles.formTextInput}\r\n                placeholder={\"First Name\"}\r\n                maxLength={12}\r\n                onChangeText={(text) => {\r\n                  this.setState({\r\n                    firstName: text,\r\n                  });\r\n                }}\r\n                value={this.state.firstName}\r\n              />\r\n\r\n            <Text style={styles.label}>Last Name </Text>\r\n              <TextInput\r\n                style={styles.formTextInput}\r\n                placeholder={\"Last Name\"}\r\n                maxLength={12}\r\n                onChangeText={(text) => {\r\n                  this.setState({\r\n                    lastName: text,\r\n                  });\r\n                }}\r\n                value={this.state.lastName}\r\n              />\r\n\r\n                <Text style={styles.label}>Contact </Text>\r\n              <TextInput\r\n                style={styles.formTextInput}\r\n                placeholder={\"Contact\"}\r\n                maxLength={10}\r\n                keyboardType={\"numeric\"}\r\n                onChangeText={(text) => {\r\n                  this.setState({\r\n                    contact: text,\r\n                  });\r\n                }}\r\n                value={this.state.contact}\r\n              />\r\n\r\n                <Text style={styles.label}>Address </Text>\r\n              <TextInput\r\n                style={styles.formTextInput}\r\n                placeholder={\"Address\"}\r\n                multiline={true}\r\n                onChangeText={(text) => {\r\n                  this.setState({\r\n                    address: text,\r\n                  });\r\n                }}\r\n                value={this.state.address}\r\n              />\r\n            </View>\r\n              <View style={styles.buttonView}>\r\n                <TouchableOpacity\r\n                  style={styles.button}\r\n                  onPress={() => {\r\n                    this.updateUserDetails();\r\n                  }}\r\n                >\r\n                  <Text style={styles.buttonText}>Save</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor:\"#6fc0b8\"\r\n  },\r\n  formContainer:{\r\n    flex: 0.88,\r\n    justifyContent:'center'\r\n  },\r\n  label:{\r\n    fontSize:RFValue(18),\r\n    color:\"#717D7E\",\r\n    fontWeight:'bold',\r\n    padding:RFValue(10),\r\n    marginLeft:RFValue(20)\r\n  },\r\n  formTextInput: {\r\n    width: \"90%\",\r\n    height: RFValue(50),\r\n    padding: RFValue(10),\r\n    borderWidth:1,\r\n    borderRadius:2,\r\n    borderColor:\"grey\",\r\n    marginBottom:RFValue(20),\r\n    marginLeft:RFValue(20)\r\n  },\r\n  button: {\r\n    width: \"75%\",\r\n    height: RFValue(60),\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    borderRadius: RFValue(50),\r\n    backgroundColor: \"#32867d\",\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 8,\r\n    },\r\n    shadowOpacity: 0.44,\r\n    shadowRadius: 10.32,\r\n    elevation: 16,\r\n    marginTop: RFValue(20),\r\n  },\r\n  buttonView:{\r\n    flex: 0.22,\r\n    alignItems: \"center\",\r\n    marginTop:RFValue(100)\r\n},\r\n  buttonText: {\r\n    fontSize: RFValue(23),\r\n    fontWeight: \"bold\",\r\n    color: \"#fff\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}